============================================================================================================================================
#Laravel-web_Site: https://laravel.com/

#Criando um projeto laravel completo com Docker:
//example-app pode ser qualquer nome_do_projeto
curl -s https://laravel.build/example-app | bash                            
cd example-app 

//subindo os containers
./vendor/bin/sail up 

//criando as tabelas do banco de dados
./vendor/bin/sail artisan migrate 

#Criando um Alias para rodar comandos sail:
ls -la
sudo nano .bachrc
// copiar o comando abaixo, colar e salvar dentro do arquivo.bachrc
alias sail='sh $([ -f sail ] && echo sail || echo vendor/bin/sail)'
or
alias sail='bash $PWD/vendor/bin/sail'

#Testando o Alias:
sail --help
sail up
sail up -d
sail stop   // Para os cont√™ineres, mas mant√©m o estado, redes e volumes.
sail down   //Para os cont√™ineres e remove as redes, volumes e outros recursos associados.

============================================================================================================================================
#Testando o servidor Apache (para evitar conflitos)
sudo lsof -i :80
sudo service apache2 stop

============================================================================================================================================
#Testando Artisan:
php artisan --help
sail php artisan make:controller Name_Controller

sail php artisan make:model Fornecedores -m
or
sail php artisan make:model Fornecedores
sail php artisan make:migration create_fornecedores_table
sail php artisan migrate
sail php artisan migrate:rollback

php artisan route:list --help
php artisan route:list -v
php artisan route:list

============================================================================================================================================

#Rodando em uma nova maquina a patir de um git-clone

//Laravel-sail √© um orquestrador de docker compose, ou seja, ele ajuda a subir e controlar os cont√™ineres do projeto laravel.
//A pasta vendor do projeto laravel est√° listado no arquivo .gitignore por padr√£o, ou seja, n√£o √© versionado e n√£o consta no projeto que clonei.
//A documenta√ß√£o (https://laravel.com/docs/11.x/sail#introduction) fala sobre um comando que deve ser executado na pasta do projeto rec√©m clonado 
//em uma nova m√°quina para que passe a ter novamente os comandos 'sail' (com o alias) dispon√≠veis no ambiente local (fora dos cont√™ineres):

cd <pasta do projeto>
docker run --rm \
    -u "$(id -u):$(id -g)" \
    -v "$(pwd):/var/www/html" \
    -w /var/www/html \
    laravelsail/php83-composer:latest \
    composer install --ignore-platform-reqs

//Sobre as vari√°veis de ambiente que sentimos falta na hora de executar docker compose up:
//devemos deixar os comandos de docker compose de lado e usar sempre o comando sail, pois o arquivo vendor/laravel/sail/bin/sail tem vari√°veis
//de ambiente como WWWUSER e WWWGROUP que s√£o usados pelos cont√™ineres.
//Por isso, as linhas do docker compose que cont√©m WWWGROUP e WWWUSER devem ser mantidas em suas vers√µes originais.

//Precisei usar esse comando para prosseguir com o setup em minha m√°quina:
sail build
sail php artisan key:generate

//Precisei alterar as vari√°veis de ambiente no arquivo .env para o banco de dados. Ele usaria sqlite, mas configurei pra usar o mysql:
DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=sail
DB_PASSWORD=password

//Resolvendo conflito de volume do container mysql
docker volume ls  
docker volume rm laravel_docker_sail-mysql  

//Depois executei:
sail up  
sail php artisan config:cache     //n√£o sei se precisava
sail php artisan config:clear     //n√£o sei se precisava
sail php artisan migrate          //carga inicial da base de dados
sail php artisan migrate:status   //lista que as migra√ß√µes foram executadas

//e consegui acessar a p√°gina inicial do projeto ü•≤

============================================================================================================================================

#Acessando o Banco de Dados pelo Terminal

docker exec -it laravel_docker-mysql-1 bash
mysql -u sail -p
Enter password:password
SHOW DATABASES;
USE laravel;
SHOW TABLES;
select * from migrations;
describe fornecedores;

============================================================================================================================================

#Model_Laravel

//Eloquent ORM (Object-Relational Mapping) ==> https://laravel.com/docs/11.x/eloquent
sail php artisan tinker 
$contato = new \App\Models\SiteContato();
$contato->nome = 'Kevin';
$contato->telefone = '(22) 99899 9899';
$contato->email = 'kevin@gmail.com';
$contato->motivo_contato = 1;
$contato->mensagem = 'teste';
print_r($contato->getAttributes());
$contato->save();

============================================================================================================================================

#Seeders
//O Laravel oferece uma interface interativa chamada Tinker, que permite executar comandos e interagir com os modelos diretamente.

Execute o comando abaixo no terminal para entrar no Tinker:
sail php artisan tinker

Para listar os registros do modelo Sistema, execute o seguinte comando:
App\Models\Sistema::all();

//para sair do Tinker
exit or Ctrl + c

============================================================================================================================================

#Procedimento de projeto gitlab:

//selecionar uma issue
//create merge request and branch

git checkout master                            //Troca para a master local
git pull                                       //Atualiza as modifica√ß√µes da master remota
git status                                     //verifica as modifica√ß√µes
git checkout nome_da_branch_referente_a_issue  //Troca para a issue de trabalho
git merge master                               //Atualiza as altera√ß√µes da master local

============================================================================================================================================